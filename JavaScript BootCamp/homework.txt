Task-1
Why spend money on a fortune teller when you can create your own destiny? Write a JavaScript function called tellFortune with the following specifications:
i)It should take four arguments: the number of children you'll have, the name of your future partner, the place you'll live in, and your future job title.
ii)The function should display your fortune on the screen in the following format: "You will be a [job title] in [location], and married to [partner's name] with [number of children] kids."
To complete the task, call the tellFortune function three times, each time with different values for the arguments to see different fortune predictions.

Task-2
"The Pet Age Calculator"
Ever wondered how old your cat is in human years? Let's calculate it!
Create a JavaScript function called calculatePetAge with the following specifications:
i) It should take one argument: your pet's age.
ii) Calculate your pet's age based on the conversion rate of 1 human year to 7 pet years (for example, for a cat).
iii) Display the result on the screen in the format: "Your kitty is NN years old in cat years!"
To make it more interesting, let's consider a bonus feature:
Bonus: Add an additional argument to the function that allows you to specify the conversion rate of human years to pet years, accommodating different types of animals.
Now, call the calculatePetAge function three times with various pet ages and conversion rates to see the pet's age in different contexts.

Task-3
“The Rectangler”
Create 2 functions that calculate properties of a rectangle, using the definitions here.
i)	Create a function called calcPerimeter:
Pass the length and width of the rectangle to the function.
Calculate the perimeter of the rectangle based on its length and width, and output "The perimeter is NN".
ii)	Create a function called calcArea:
Pass the length and width of the rectangle to the function.
Calculate the area of the rectangle based on its length and width, and output "The area is NN”.

Task-4
"The Coffee Consumption Estimator”
Are you curious about how much coffee you'll need to last you through your coffee-drinking years? Let's create a function to estimate that!
Write a function named calculateCoffeeSupply that:
Takes 2 arguments: age and cups per day.
Calculates the total number of cups of coffee you'll consume for the rest of your life (based on a constant max age).
Outputs the result to the screen as: "You will need NN cups of coffee to keep you awake until the age of X."
Call that function three times, passing in different values each time to estimate your coffee consumption.
Bonus: Accept floating-point values for cups per day, and round the result to the nearest whole number."



Task-5
"The Distance Converter”
Let's create a converter for converting distances between different units. Follow these steps:
Create a function called metersToFeet:
Store a distance in meters into a variable.
Convert it to feet (1 meter = 3.281 feet) and output "NN meters is equal to NN feet."
Create a function called feetToMeters:
Store a distance in feet into a variable.
Convert it to meters (1 foot = 0.3048 meters) and output "NN feet is equal to NN meters."
Call both functions, passing in different distance values each time, to convert between meters and feet."





Task-3
“The Rectangler”
Create 2 functions that calculate properties of a rectangle, using the definitions here.
i)	Create a function called calcPerimeter:
Pass the length and width of the rectangle to the function.
Calculate the perimeter of the rectangle based on its length and width, and output "The perimeter is NN".
ii)	Create a function called calcArea:
Pass the length and width of the rectangle to the function.
Calculate the area of the rectangle based on its length and width, and output "The area is NN”.

Task-4
"The Coffee Consumption Estimator”
Are you curious about how much coffee you'll need to last you through your coffee-drinking years? Let's create a function to estimate that!
Write a function named calculateCoffeeSupply that:
Takes 2 arguments: age and cups per day.
Calculates the total number of cups of coffee you'll consume for the rest of your life (based on a constant max age).
Outputs the result to the screen as: "You will need NN cups of coffee to keep you awake until the age of X."
Call that function three times, passingbb in different values each time to estimate your coffee consumption.
Bonus: Accept floating-point values for cups per day, and round the result to the nearest whole number."



Task-5
"The Distance Converter”
Let's create a converter for converting distances between different units. Follow these steps:
Create a function called metersToFeet:
Store a distance in meters into a variable.
Convert it to feet (1 meter = 3.281 feet) and output "NN meters is equal to NN feet."
Create a function called feetToMeters:
Store a distance in feet into a variable.
Convert it to meters (1 foot = 0.3048 meters) and output "NN feet is equal to NN meters."
Call both functions, passing in different distance values e




























// (function show(){
//     console.log("This is show function");
    
// })()

// function cartoons(){
//     console.log("Shinchan is naughty 😂");
//     return 9;
    
// }
// console.log(cartoons());


// console.log("Hello Students");

// (function show(){
//     console.log("show function");
    
// })()

// function marvelheros(heroname1){
//     console.log("Marvel Heros ",heroname1);
    
//     function dcheros(heroname2){
//         console.log("DC Heros",heroname2);
        
//     }
//    return dcheros
// }

// marvelheros("Spiderman")("Superman");

// let a=9;

// function outer(){
//     let b=10;

//     function inner(){
//         let c=11;
//         console.log(a,b,c);
        

//     }
//     inner()
// }
// outer()


// function counter(){
//     let count=0;

//     return function(){
//         count++;
//         console.log(count);
        
//     }
// }

// const counterData=counter();
// console.log(counterData);

// counterData();
// counterData();
// counterData();

// show()
// function show(){
//     console.log("show function");
// }

// display()
// const display=()=>{
//     console.log("Display function");
    
// }
// // console.log(a);

// // let a=9;

// function show(){

// }

// show()


// function pure(a,b){
//     return a+b
// }

// console.log(pure(2,3));
// console.log(pure(2,3));

// let total=0;
// function addTotal(value){
//     total+=value;
//     return total;
// }
// console.log(addTotal(5));
// console.log(addTotal(5));











